<!-- views/pakaian/pakaian-detail.ejs -->
<div class="content flex-grow-1">
  <div class="container">
    <div class="header mb-4">
      <a href="/api/pakaian" class="text-decoration-none">
        <i class="fas fa-arrow-left"></i> Back to Products
      </a>
      <h1 class="mt-2">Edit Product</h1>
    </div>

    <!-- Form informasi dasar produk -->
    <form id="productForm">
      <input type="hidden" id="productId" value="<%= produk.id_pakaian %>">
      
      <div class="form-section card mb-4">
        <div class="card-body">
          <h2 class="card-title">Basic Information</h2>

          <div class="mb-3">
            <label for="productName" class="form-label">Product Name*</label>
            <input 
              type="text" 
              class="form-control" 
              id="productName" 
              required 
              value="<%= produk.nama_pakaian %>"
            />
          </div>

          <div class="mb-3">
            <label for="productDescription" class="form-label">Product Description</label>
            <textarea 
              class="form-control" 
              id="productDescription" 
              rows="3"
            ><%= produk.deskripsi_pakaian %></textarea>
          </div>

          <div class="mb-3">
            <label for="productPrice" class="form-label">Product Price*</label>
            <input 
              type="number" 
              class="form-control" 
              id="productPrice" 
              required 
              step="0.01"
              value="<%= produk.harga %>"
            />
          </div>

          <div class="mb-3">
            <label for="category" class="form-label">Category*</label>
            <select class="form-control" id="category" required>
              <option value="" disabled>Select Category</option>
              <% kategoriList.forEach(function(kategori) { %>
                <option 
                  value="<%= kategori.id_kategori_pakaian %>"
                  <%= produk.kategori.id_kategori_pakaian === kategori.id_kategori_pakaian ? 'selected' : '' %>
                >
                  <%= kategori.nama_kategori_pakaian %>
                </option>
              <% }); %>
            </select>
          </div>

          <div class="mb-3">
            <label for="weight" class="form-label">Weight (in grams)</label>
            <input 
              type="number" 
              class="form-control" 
              id="weight" 
              step="0.01"
              value="<%= produk.berat %>"
            />
          </div>

          <div class="mb-3">
            <label for="status" class="form-label">Status</label>
            <select class="form-control" id="status">
              <option value="active" <%= produk.status_produk === 'active' ? 'selected' : '' %>>Active</option>
              <option value="inactive" <%= produk.status_produk === 'inactive' ? 'selected' : '' %>>Inactive</option>
            </select>
          </div>
        </div>
      </div>

      <!-- Tombol Submit -->
      <div class="d-flex justify-content-end mb-4">
        <button type="button" class="btn btn-danger me-2" id="deleteProduct">Delete Product</button>
        <a href="/api/pakaian" class="btn btn-secondary me-2">Cancel</a>
        <button type="submit" class="btn btn-primary">Update Product</button>
      </div>
    </form>

    <!-- Tabel varian -->
    <div class="card mb-4">
      <div class="card-body">
        <h2 class="card-title">Product Variants</h2>
        <div class="table-responsive">
          <table class="table" id="variantTable">
            <thead>
              <tr>
                <th>No</th>
                <th>Size</th>
                <th>Color</th>
                <th>Stock</th>
                <th>SKU</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% produk.varian_pakaian.forEach((varian, index) => { %>
                <tr>
                  <td><%= index + 1 %></td>
                  <td><%= varian.ukuran %></td>
                  <td><%= varian.warna %></td>
                  <td><%= varian.stok %></td>
                  <td><%= varian.kode_sku %></td>
                  <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeVariant(<%= index %>)">
                      <i class="fas fa-trash"></i>
                    </button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Form tambah varian -->
    <div class="card">
      <div class="card-body">
        <h3 class="card-title">Add New Variant</h3>
        <form id="variantForm" class="row g-3">
          <div class="col-md-3">
            <label for="variantSize" class="form-label">Size*</label>
            <select class="form-control" id="variantSize" required>
              <option value="" selected disabled>Select Size</option>
              <option value="S">S</option>
              <option value="M">M</option>
              <option value="L">L</option>
              <option value="XL">XL</option>
              <option value="XXL">XXL</option>
            </select>
          </div>

          <div class="col-md-3">
            <label for="variantColor" class="form-label">Color*</label>
            <input type="text" class="form-control" id="variantColor" required />
          </div>

          <div class="col-md-3">
            <label for="variantStock" class="form-label">Stock*</label>
            <input type="number" class="form-control" id="variantStock" min="0" required />
          </div>

          <div class="col-md-3 d-flex align-items-end">
            <button type="submit" class="btn btn-success">Add Variant</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const variantForm = document.getElementById("variantForm");
    const variantTable = document.getElementById("variantTable").getElementsByTagName("tbody")[0];
    const productForm = document.getElementById("productForm");
    const deleteButton = document.getElementById("deleteProduct");
    const productId = document.getElementById("productId").value;
    
    // Inisialisasi array variants dengan data yang sudah ada
    let variants = [];
    
    // Ambil data varian yang sudah ada dari tabel
    const existingRows = variantTable.getElementsByTagName("tr");
    for (let i = 0; i < existingRows.length; i++) {
        const cells = existingRows[i].getElementsByTagName("td");
        variants.push({
            ukuran: cells[1].textContent,
            warna: cells[2].textContent,
            stok: parseInt(cells[3].textContent),
            kode_sku: cells[4].textContent
        });
    }

    // Handler untuk form varian
    variantForm.addEventListener("submit", function (e) {
        e.preventDefault();

        // Ambil nilai dari form varian
        const size = document.getElementById("variantSize").value;
        const color = document.getElementById("variantColor").value;
        const stock = parseInt(document.getElementById("variantStock").value);

        // Tambahkan varian ke array
        variants.push({
            ukuran: size,
            warna: color,
            stok: stock
        });

        // Tambahkan row baru ke tabel
        const newRow = variantTable.insertRow();
        const rowIndex = variantTable.rows.length - 1;

        newRow.innerHTML = `
            <td>${rowIndex + 1}</td>
            <td>${size}</td>
            <td>${color}</td>
            <td>${stock}</td>
            <td>SKU akan digenerate</td>
            <td>
                <button type="button" class="btn btn-danger btn-sm" onclick="removeVariant(${rowIndex})">
                    <i class="fas fa-trash"></i>
                </button>
            </td>
        `;

        // Reset form varian
        variantForm.reset();
    });

    // Fungsi untuk menghapus varian
    window.removeVariant = function(index) {
        variants.splice(index, 1);
        variantTable.deleteRow(index);
        
        // Update nomor urut
        const rows = variantTable.getElementsByTagName('tr');
        for (let i = 0; i < rows.length; i++) {
            rows[i].getElementsByTagName('td')[0].textContent = i + 1;
        }
    };

    // Handler untuk delete product
    deleteButton.addEventListener("click", async function() {
        if (confirm("Are you sure you want to delete this product?")) {
            try {
                const response = await fetch(`/api/pakaian/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (!response.ok) {
                    throw new Error(result.message || 'Error deleting product');
                }

                alert('Product successfully deleted!');
                window.location.href = '/api/pakaian';

            } catch (error) {
                alert(error.message);
                console.error('Error:', error);
            }
        }
    });

    // Handler untuk form produk utama (update)
    productForm.addEventListener("submit", async function (e) {
        e.preventDefault();

        // Validasi: minimal harus ada satu varian
        if (variants.length === 0) {
            alert("At least one variant is required!");
            return;
        }

        // Kumpulkan data dari form
        const formData = {
            nama_pakaian: document.getElementById("productName").value,
            deskripsi_pakaian: document.getElementById("productDescription").value,
            harga: parseFloat(document.getElementById("productPrice").value),
            id_kategori_pakaian: parseInt(document.getElementById("category").value),
            berat: parseFloat(document.getElementById("weight").value) || null,
            status_produk: document.getElementById("status").value,
            varian_pakaian: variants
        };

        try {
            // Kirim data ke server menggunakan fetch API
            const response = await fetch(`/api/pakaian/${productId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (!response.ok) {
                throw new Error(result.message || 'Error updating product');
            }

            alert('Product successfully updated!');
            // Refresh halaman untuk menampilkan data terbaru
            window.location.reload();

        } catch (error) {
            alert(error.message);
            console.error('Error:', error);
        }
    });
});
</script>